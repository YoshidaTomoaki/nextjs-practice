{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/tomoaki/nextjs-practice/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport Layout from '../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return __jsx(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, __jsx(Link, {\n      href: \"/p/[id]\",\n      i: true,\n      as: \"/p/\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, show.name)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('https://api.tvmaze.com/search/shows?q=batman'));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(\"show data fetchd. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/tomoaki/nextjs-practice/pages/index.js"],"names":["React","Link","Layout","fetch","Index","props","shows","map","show","id","name","getInitialProps","res","json","data","console","log","length","entry"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAG;AAEpB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiB,UAAAC,IAAI;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,WAAV;AAAsB,MAAA,CAAC,MAAvB;AAAwB,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,IAAT,CADA,CADF,CADoB;AAAA,GAArB,CADH,CADF,CADF;AAaD,CAfD;;AAiBAN,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEJR,KAAK,CAAC,8CAAD,CAFD;;AAAA;AAEhBS,UAAAA,GAFgB;AAAA;AAAA,2CAGHA,GAAG,CAACC,IAAJ,EAHG;;AAAA;AAGhBC,UAAAA,IAHgB;AAKtBC,UAAAA,OAAO,CAACC,GAAR,oCAAwCF,IAAI,CAACG,MAA7C;AALsB,2CAOf;AACLX,YAAAA,KAAK,EAAEQ,IAAI,CAACP,GAAL,CAAS,UAAAW,KAAK;AAAA,qBAAIA,KAAK,CAACV,IAAV;AAAA,aAAd;AADF,WAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import React from 'react' \nimport Link from 'next/link'\nimport Layout from '../components/MyLayout'\nimport fetch from 'isomorphic-unfetch'\n\nconst Index = props =>{\n\n  return (\n    <Layout>\n      <ul>\n        {props.shows.map( show => (\n          <li key={show.id}>\n            <Link href={`/p/[id]`}i as={`/p/${show.id}`}>\n            <a>{show.name}</a>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n ) \n};\n\nIndex.getInitialProps = async function() {\n\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=batman')\n  const data = await res.json()\n\n  console.log(`show data fetchd. Count: ${data.length}`)\n\n  return {\n    shows: data.map(entry => entry.show)\n  } \n\n}\n"]},"metadata":{},"sourceType":"module"}